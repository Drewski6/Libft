# GDB Tutorial

to run a program in gdb, need to first compile with -g flag

```
gcc -g <file name>           // this creates the a.out file
gdb a.out                    // to run
```

https://www.youtube.com/watch?v=svG6OPyKsrw

| run                           | run commands like normal                                                                  |
| layout next                   | shows call stack?                                                                         |
| layout src                    | shows the source code layout                                                              |
| break #                       | will set a breakpoint at the line specified                                               |
| break function_name           | will create a break point at the beginning of the function name                           |
| next (n)                      | execute one more command                                                                  |
| list                          | shows lines of code around current location                                               |
| print (p)                     | asks gdb to print the value of a variable (arrays, structs, etc.)                         |
|                               | can also add function::variable for variable in another function                          |
|                               | type expressions after p and de-reference pointers to get values                          |
| quit                          | leave gdb                                                                                 |
| clear                         | can use to clear breakpoints                                                              |
|                               | clear # - clears the breakpoints set at a particular line number                          |
|                               | clear function_name - clears the breakpoints at a func name                               |
| up                            | move up the call stack to see what the previous function was that                         |
|                               | called the current function                                                               |
| down                          | move down the call stack to see what the next function call is                            |
| display variable_name         | each next will print the value of variable_name every time                                |
| undisplay id                  | stops displaying variable_name                                                            |
|                               | in the beginning of the line where the display of the variable is                         |
|                               | there is a number. that number is the id.                                                 |
|                               | when you undisplay, you need to use id number not variable name                           |
| backtrace                     | prints the entire call stack                                                              |
| step                          | steps into a function and executes line by line                                           |
| Finish                        | Tells gdb to allow the current function to conclude but when the                          |
|                               | stack frame pops, pause                                                                   |
|                               | Can also use to execute a function and view the return                                    |
| watch variable_name           | Will allow the program to run but will break when the value for                           |
|                               | the variable is changed                                                                   |
| continue (c)                  | Allows the program to continue until next break or watch point                            |
| frame                         | prints info on the current stack frame                                                    |
| info (i)                      | Let's us see what break points and watch points are set                                   |
|                               | info locals - gives info on all local variables                                           |
|                               | info break - shows all breakpoints                                                        |
|                               | info args - shows arguments passed to function                                            |
| delete id                     | Let's us remove watch points and break points                                             |
|                               | Deletes by id number                                                                      |
|                               | Putting no ID number will delete all break points/watch points                            |
| whatis (what) variable_name   | Returns the variable type                                                                 |
| target record-full            | Tells gdb to record every change that is being made in debugging                          |
|                               | from now on so that we can step backwards.                                                |
| reversenext (rn)              | Allows you to move to previous line of code if you set target                             |
|                               | record-full                                                                               |
|                               | Keep in mind that this someone's didn't work                                              |
| set var variable_name = value | Allows us to change variable values mid debug so we don't have                            |
|                               | to exit gdb, open source file, edit, close, recompile,                                    |
|                               | restart gdb for something small                                                           |
| help command                  | prints all the commands you can use with whatever you asked for                           |
|                               | help with                                                                                 |
| tui enable                    | turns on layout src                                                                       |
| tui disable                   | turns off layout src                                                                      |
| Ctrl-p (previous command)     | Similar to using the up arrow in terminal. Ctrl-p                                         |
| Ctrl-n (next command)         | similar to using the down arrow in terminal. Ctrl-n                                       |
| set logging enable on         | Turns on logging to a gdb.txt file in current directory.                                  |
| record                        | Needed for multithreaded processes to reverse.                                            |
| x/???bc variable_name         | will print off ??? number of values in memory starting from                               |
|                               | variable_name pointer address. Useful for printing arrays.                                |
|                               | More here: {{https://visualgdb.com/gdbreference/commands/x}}                              |




TIPS:
- if you want to refer to another variable that is not in the current scope, you can reference the function then the variable like this (function::variable) ex (main::number1)
- for global variables reference file name then variable name (main.c::number1)
- 


